(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{587:function(t,s,a){"use strict";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("大家好我是Fly哥，好久没有用心写文章了，还是勿忘初心，砥砺前行，争取帮助大家"),a("strong",[t._v("入门webgl,")]),t._v(" 然后呢我自己也深度学习下，不想做three.js 的api 调用者，路漫漫其修远兮，吾将上下而求索。 读完本篇文章，你可以学到什么，或者日后你查阅资料可以查看， 记得点赞、收藏")]),t._v(" "),a("ol",[a("li",[t._v("Webgl 中的buffer 到底是什么？？？")]),t._v(" "),a("li",[t._v("为什么要有buffer这东西， 没有不行吗？？？")]),t._v(" "),a("li",[t._v("如何使用webgl 中的buffer???")])]),t._v(" "),a("h1",{attrs:{id:"数学"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数学"}},[t._v("#")]),t._v(" 数学？？")]),t._v(" "),a("p",[t._v("听到webgl 这个三个字， 很多同学就怕难， **fly哥我数学不好， 我学不好？？？**别慌，不会就多思考， 别做说话的巨人，行动的矮子。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220109230354743.png",alt:"数学差"}})]),t._v(" "),a("p",[t._v("这一次还是手把手把简单的概念讲清楚，不熟悉的同学可以先复习下这篇文章。")]),t._v(" "),a("p",[t._v("这一篇文章： "),a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzkyMjI2MDg3OQ==&mid=2247484729&idx=1&sn=4eb3f73ac5cf8f32176f4d30d418e418&chksm=c1f641d9f681c8cfb51db9800a7e76c278b1eb099a96e0d048fc81ab4cecf737921b967aa3f5&token=1061604143&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"}},[t._v("几个简单的小例子 带你入门webgl"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzkyMjI2MDg3OQ==&mid=2247484729&idx=1&sn=4eb3f73ac5cf8f32176f4d30d418e418&chksm=c1f641d9f681c8cfb51db9800a7e76c278b1eb099a96e0d048fc81ab4cecf737921b967aa3f5&token=1061604143&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"什么是buffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是buffer"}},[t._v("#")]),t._v(" 什么是buffer")]),t._v(" "),a("p",[t._v("buffer， 这是啥东西啊 ，或者说为什么要有buffer 这个东西 对于webgl 来说。 我们先看下官方定义：")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("WebGLBuffer")]),t._v(" 接口属于 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebGL API"),a("OutboundLink")],1),t._v(" 的一部分，表示一个不透明的缓冲区对象，储存诸如顶点或着色之类的数据。")])]),t._v(" "),a("p",[t._v("官方的这个解释，作为一个小白来说， 啥哇，你这是在为难我胖虎嘛？？？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220115113307641.png",alt:"为难我胖虎"}})]),t._v(" "),a("p",[t._v("没事由我来大家解读，首先第一句话就是一句废话， 属于"),a("strong",[t._v("webgl API 的一部分")]),t._v("， 这我他🐴的也知道哇，我们重点分析 一下这句话，是一个不透明的缓冲区对象，")]),t._v(" "),a("h1",{attrs:{id:"什么是缓冲区对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是缓冲区对象"}},[t._v("#")]),t._v(" 什么是缓冲区对象")]),t._v(" "),a("p",[a("strong",[t._v("webgl提供一种很方便的机制 ，就是缓冲区对象")]),t._v("，它可以一次性向着色器传入多个顶点的数据。缓冲区对象是WebGL系统中的一块内存区域，我们可以一次性地向缓冲区对象中填充大量的顶点数据，然后将这些数据保存在其中，供顶点着色器使用。")]),t._v(" "),a("p",[t._v("确实是很方便机制，为什么这么说呢， 我就拿 画3个点的 这个例子  去做说明， "),a("strong",[t._v("下面写的都是伪代码")])]),t._v(" "),a("h2",{attrs:{id:"没用缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没用缓冲区"}},[t._v("#")]),t._v(" 没用缓冲区")]),t._v(" "),a("p",[t._v("我想在webgl 中画3个点， 很简单吧 ，不搞一些花里胡哨的，就简单的3个点：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清除颜色缓冲区")]),t._v("\n  gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COLOR_BUFFER_BIT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" len "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" g_poiont"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环添加点")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将点的位置传递到变量中a_position")]),t._v("\n      gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vertexAttrib3f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a_Position"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("g_poiont"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("g_poiont"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//绘制点")]),t._v("\n      gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawArrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POINTS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这里的画 我对这段代码做一个简单的说明")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("清楚颜色缓冲区")])]),t._v(" "),a("li",[a("strong",[t._v("然后循环遍历  数组列表")])]),t._v(" "),a("li",[a("strong",[t._v("位置传递到顶点着色器， 然后去绘制顶点")])])]),t._v(" "),a("p",[t._v("看不懂的话也没关系，我在后面的webgl 系列会一步一步讲解，"),a("strong",[t._v("本篇还是文章的重点还是在buffer 的理解")]),t._v("， 希望小伙伴们明白，看不明白没关系。")]),t._v(" "),a("p",[t._v("这里的话主要介绍下gl.drawArrays 这个"),a("strong",[t._v("api")]),t._v(", 理解这个api十分重要，建议多思考。")]),t._v(" "),a("p",[t._v("这是一个强大的api, 用来绘制各种图形，我们看下下面这张图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220115135146061.png",alt:"api 展示图"}})]),t._v(" "),a("ol",[a("li",[t._v("第一个参数其实呢就是webgl绘制的方式， 有点、线、三角形 .... 我们这里是采用的绘制点的方式")]),t._v(" "),a("li",[t._v("第二参数： 就是从哪个顶点绘制参数")]),t._v(" "),a("li",[t._v("第三个参数： 当前绘制需要用 几个顶点")])]),t._v(" "),a("p",[t._v("因为我们是在循环中，所以呢就是每一次循环，绘制一个顶点 。 也就是在程序运行的时候，顶点着色器运行一次， 因为我们也只绘制一个点对吧， 好像看着还挺好的哇，合情合理。")]),t._v(" "),a("p",[t._v("我们看下下面这张图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220115141239602.png",alt:"image-20220115141239602"}})]),t._v(" "),a("p",[t._v("上面这张图是一个哆唻A梦的3维网格模型，从图像中去看，他的顶点有很多，我们难道要用循环一次一次 就去画出这个顶点嘛，那这样 gpu 渲染会快嘛， 肯定不是这么搞的，  这时候你再去读一下上面的"),a("strong",[t._v("buffer")]),t._v(" 定义： "),a("strong",[t._v("它可以一次性向着色器传入多个顶点的数据")])]),t._v(" "),a("p",[t._v("我们使用buffer的方式子再去绘制3个顶点：")]),t._v(" "),a("h2",{attrs:{id:"使用缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用缓冲区"}},[t._v("#")]),t._v(" 使用缓冲区")]),t._v(" "),a("p",[t._v("我们看下伪代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置顶点位置")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initVertexBuffers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将三个点绘制出来")]),t._v("\n gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawArrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POINTS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ol",[a("li",[t._v("第一个函数使用了 使用了buffer, 并且做了数据绑定")]),t._v(" "),a("li",[t._v("然后我们告诉webgl  我们当前绘制 3个顶点，并且数据啥的 我们已经在缓冲中绑定好了")])]),t._v(" "),a("p",[t._v("这样对于各种复杂的模型，我们都可以轻易拿捏，真的很帅哇， 一次性可以处理 很多个顶点，充分发挥GPU"),a("strong",[t._v("并行渲染")]),t._v("的能力。")]),t._v(" "),a("p",[t._v("我画了一个流程对比图，方便你理解")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220115144555134.png",alt:"使用了缓冲区对象"}})]),t._v(" "),a("p",[t._v("没有使用缓冲区对象的顶点着色器 可能会根据顶点的个数执行多次")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220115144714170.png",alt:"未使用顶点着色器对象"}})]),t._v(" "),a("p",[t._v("好了到下面一个问题了到底如何使用缓冲区的呢？？？？")]),t._v(" "),a("h1",{attrs:{id:"如何使用缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用缓冲区"}},[t._v("#")]),t._v(" 如何使用缓冲区")]),t._v(" "),a("p",[t._v("其实就是刚才上面的"),a("strong",[t._v("initVertexBuffers")]),t._v("函数做的几件事")]),t._v(" "),a("ol",[a("li",[t._v("第一步：创建缓冲区对象（gl.createBuffer()）")]),t._v(" "),a("li",[t._v("第二步：绑定缓冲区对象（gl.bindBuffer()）")]),t._v(" "),a("li",[t._v("第三步：将数据写入缓冲区对象（gl.bufferData()）")]),t._v(" "),a("li",[t._v("第四步：将缓冲区对象分配给一个attribute变量（gl.vertexAttribPointer()）")]),t._v(" "),a("li",[t._v("第五步：开启attribute变量（gl.enableVertexAttribArray()）")])]),t._v(" "),a("p",[t._v("跟着我的脚步一步一步来分析：")]),t._v(" "),a("h2",{attrs:{id:"创建缓冲对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建缓冲对象"}},[t._v("#")]),t._v(" 创建缓冲对象")]),t._v(" "),a("p",[t._v("代码其实很简单 就是下面这一行：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("但是他实际会发什么呢， 如图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220115150323334.png",alt:"展示"}})]),t._v(" "),a("p",[t._v("其实在内存中就会分配一块缓冲区对象，有创建其实就有对应的 删除缓冲区对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"绑定缓冲区对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绑定缓冲区对象"}},[t._v("#")]),t._v(" 绑定缓冲区对象")]),t._v(" "),a("p",[t._v("有了对象了，我们要开始绑定缓冲区对象， 细心的同学看上面图片 可能会发现 在缓冲区的上面 "),a("strong",[t._v("gl.ARRAY_BUFFER")]),t._v("  还有 "),a("strong",[t._v("gl.ELEMENT_ARRAY_BUFFER")]),t._v("  这两个有什么区别呢？？？ 什么时候使用呢")]),t._v(" "),a("p",[t._v("就是因为buffer 的类型很多变， 所以你必须手动绑定，表示当前buffer")]),t._v(" "),a("p",[t._v("我先介绍下 这两个buffer 的区别：")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("gl.ARRAY_BUFFER")]),t._v(": 包含顶点属性的Buffer，如顶点坐标，纹理坐标数据或顶点颜色数据。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("gl.ELEMENT_ARRAY_BUFFER")]),t._v(": 用于元素索引的Buffer。")])]),t._v(" "),a("li",[a("p",[t._v("当使用 "),a("strong",[t._v("WebGL 2 context")])]),t._v(" "),a("p",[t._v("时，可以使用以下值：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("gl.COPY_READ_BUFFER")]),t._v(": 从一个Buffer对象复制到另一个Buffer对象。")]),t._v(" "),a("li",[a("code",[t._v("gl.COPY_WRITE_BUFFER")]),t._v(": 从一个Buffer对象复制到另一个Buffer对象。")]),t._v(" "),a("li",[a("code",[t._v("gl.TRANSFORM_FEEDBACK_BUFFER")]),t._v(": Buffer for transform feedback operations.")]),t._v(" "),a("li",[a("code",[t._v("gl.UNIFORM_BUFFER")]),t._v(": 用于存储统一块的Buffer。")]),t._v(" "),a("li",[a("code",[t._v("gl.PIXEL_PACK_BUFFER")]),t._v(": 用于像素传输操作的Buffer。")]),t._v(" "),a("li",[a("code",[t._v("gl.PIXEL_UNPACK_BUFFER")]),t._v(": 用于像素传输操作的Buffer。")])])])]),t._v(" "),a("p",[t._v("这里不理解的话没关系，后面会讲， 你只要知道，buffer有很多类型， 因为我们是顶点嘛， 所以绑定的肯定是第一个类型")]),t._v(" "),a("p",[t._v("代码如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" canvas "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'canvas'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" gl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" canvas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webgl'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bindBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ARRAY_BUFFER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("然后看下下面的图片，")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220115152142352.png",alt:"绑定缓冲区对象"}})]),t._v(" "),a("p",[t._v("注意看小箭头， 箭头就是绑定buffer的过程")]),t._v(" "),a("h2",{attrs:{id:"写入数据到缓冲对象了"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写入数据到缓冲对象了"}},[t._v("#")]),t._v(" 写入数据到缓冲对象了")]),t._v(" "),a("p",[t._v("这时候我们的前置工作都已经准备好了， 那么数据呢如何写进去呢，在这之前我先简单讲一个数据类型——类型数组")]),t._v(" "),a("h3",{attrs:{id:"类型数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型数组"}},[t._v("#")]),t._v(" 类型数组：")]),t._v(" "),a("blockquote",[a("p",[t._v("JavaScript类型化数组是一种类似数组的对象，并提供了一种用于访问原始二进制数据的机制。 正如你可能已经知道，"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Array")]),a("OutboundLink")],1),t._v(" 存储的对象能动态增多和减少，并且可以存储任何JavaScript值。JavaScript引擎会做一些内部优化，以便对数组的操作可以很快。然而，随着Web应用程序变得越来越强大，尤其一些新增加的功能例如：音频视频编辑，访问WebSockets的原始数据等，很明显有些时候如果使"),a("strong",[t._v("用JavaScript代码可以快速方便地通过类型化数组来操作原始的二进制数据将会非常有帮助。")])]),t._v(" "),a("p",[t._v("但是，不要把类型化数组与正常数组混淆，因为在类型数组上调用  "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Array.isArray()")]),a("OutboundLink")],1),t._v(" 会返回"),a("code",[t._v("false")]),t._v("。此外，并不是所有可用于正常数组的方法都能被类型化数组所支持（如 push 和 pop）。")])]),t._v(" "),a("p",[t._v("为了优化性能，webgl需要同时处理大量相同类型的数据， 例如顶点的坐标 和顶点的颜色。浏览器事先知道数组的类型，处理起来更高效， 有的强类型的感觉。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220115154818755.png",alt:"类型数组"}})]),t._v(" "),a("p",[t._v("所以代码如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 三角形的顶点数据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vertices "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Float32Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建缓冲区对象")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vertexBuffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("vertexBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"创建缓冲区对象失败"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将缓冲区对象绑定到目标")]),t._v("\n  gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bindBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ARRAY_BUFFER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("vertexBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//向缓冲区对象中写入数据")]),t._v("\n  gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bufferData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ARRAY_BUFFER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("vertices"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STATIC_DRAW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("最后一步就是我们的绑定数据， 我们来一起解读下这个"),a("strong",[t._v("api")]),t._v(" "),a("strong",[t._v("将 第二个参数数据绑定到第一个参数的缓冲区对象中")]),t._v("，第三个参数表示什么呢？？？ ， 表示的向缓冲区对象写入一次数据，但是需要绘制很多次")]),t._v(" "),a("p",[t._v("如图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220115160611470.png",alt:"写入数据"}})]),t._v(" "),a("h2",{attrs:{id:"分配变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分配变量"}},[t._v("#")]),t._v(" 分配变量")]),t._v(" "),a("p",[t._v("现在数据也写入缓冲区中了， 然后就是分配变量。 这里其实也是只有两步")]),t._v(" "),a("ol",[a("li",[t._v("第一步其实 从着色器找出属性 对应的位置")]),t._v(" "),a("li",[t._v("然后将缓冲区对象分配给这个变量")])]),t._v(" "),a("p",[t._v("我们先看下代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取attribute变量的存储位置")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a_Position "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttribLocation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("program"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a_Position"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a_Position "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"无法获取变量的存储位置"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将缓冲区对象分配给a_Position变量")]),t._v("\n  gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vertexAttribPointer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a_Position"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FLOAT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("前半部分其实 这里的话会有一点前置小知识， 会在后面文章讲解， 主要是创建 webgl 程序， 然后会初始化着色器程序， 同时在顶点着色器中 其实就是一段 字符串中 ，有"),a("strong",[t._v("a_Position")]),t._v(" 这么一部分，然后我通过gl.getAttribLocation 去查找到这个 变量 对应的存储位置。")]),t._v(" "),a("p",[t._v("后半部分的话其实： 就是将缓冲区的对象 分配给这个变量 ，我们看下这个api "),a("strong",[t._v("gl.vertexAttribPointer")])]),t._v(" "),a("ol",[a("li",[t._v("第一个参数的话其实 指定要修改的顶点属性的索引， 而这个索引 就是我们通过上面在顶点着色器中去查找到的")]),t._v(" "),a("li",[t._v("第二参数 的表示 指定每个顶点属性的组成数量，必须是1，2，3或4。这是为什么呢 ，因为顶点坐标 默认是（x,y,z,w）如果你选择是1 那么 程序会帮你把剩下的参数补充。 2 3 设置为0  4 设置为 1 。 因为我们这里 其实就是个二维坐标 ， 所以只用到了  x,y 这样的坐标  所以是2")]),t._v(" "),a("li",[t._v("第三个  表示数据类型， 我们这里是浮点型")]),t._v(" "),a("li",[t._v("第四个 表示归一化 ，就是把 非浮点型的数据 归一到 【0,1】 或者 是【-1，1】 区间")]),t._v(" "),a("li",[t._v("第五个 表示相邻两个顶点之间的字节数")]),t._v(" "),a("li",[t._v("最后一个 表示 我们获取的这个顶点索引 是在缓冲区 的何处 开始存储的 ， 我们缓冲区对象 存的都是顶点数据， 所以这里是0")])]),t._v(" "),a("p",[t._v("详细文档仔细的话， 可以去MDN 查看。 一个参数 6个参数，所以学习webgl 真的很有挑战哇， "),a("strong",[t._v("不过还是那句话， 大家觉得难，你学会了 你的市场价值就体现了")]),t._v("。 还是一个字 冲冲！！！")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220115162332100.png",alt:"棒"}})]),t._v(" "),a("p",[t._v("看下图片")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220115162518887.png",alt:"此时的场景"}})]),t._v(" "),a("h2",{attrs:{id:"激活"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#激活"}},[t._v("#")]),t._v(" 激活")]),t._v(" "),a("p",[t._v("有人看到上面图片就说， 数据也写入了， 也进行变量分配了， 为啥中间有一段连线是断的呢？？？ webgl 是真的狗， 搞得是真的复杂，我这就想画了3个点， 搞了 好几步。 头疼哇，"),a("strong",[t._v("所以说three.js 这种框架 设计 不得不说 一个字牛逼 ，但是为了学习， 我还是要学习原理， 对于three.js 你才能轻松驾驭")])]),t._v(" "),a("p",[t._v("我们看下怎么激活的 就一行代码")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//链接a_Position变量与分配给它的缓冲区对象")]),t._v("\n  gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableVertexAttribArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a_Position"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("其实就是这么简单的一行代码，表示开启变量 ， 同时建立了 缓冲区对象 和 attribute 之间的链接了")]),t._v(" "),a("p",[t._v("看下图片：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220115163204149.png",alt:"链接"}})]),t._v(" "),a("h1",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("这是Webgl 系列的第一篇文章主要讲解了buffer 从 what 、 how 、 why 三个方面去阐述了 ，今年的文章都是以系列的模式去展示给大家， 如果不想错过我的第一时间发布 ，请将公众号设置为星标， 能第一时间看到哦。最后我用文字进行总结下知识点")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("第一步：创建缓冲区对象（gl.createBuffer()）")])]),t._v(" "),a("li",[a("strong",[t._v("第二步：绑定缓冲区对象（gl.bindBuffer()）")])]),t._v(" "),a("li",[a("strong",[t._v("第三步：将数据写入缓冲区对象（gl.bufferData()）")])]),t._v(" "),a("li",[a("strong",[t._v("第四步：将缓冲区对象分配给一个attribute变量（gl.vertexAttribPointer()）")])]),t._v(" "),a("li",[a("strong",[t._v("第五步：开启attribute变量（gl.enableVertexAttribArray()）")])])]),t._v(" "),a("p",[t._v("最后再来一张图加深 同学们的记忆， 序号都标的好好的，")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20220115165037804.png",alt:"序号图"}})]),t._v(" "),a("p",[t._v("最后点个赞和在看吧， 让更多的看到，也欢迎加我的微信和我一起交流， 围观fly哥 逗比的每一天！！！ 我们下期再见了👋🏻了")])])}),[],!1,null,null,null);s.default=e.exports}}]);