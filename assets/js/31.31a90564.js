(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{583:function(t,s,a){"use strict";a.r(s);var n=a(12),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("各位同学们大家好，又到了周末写文章的时间，之前群里有粉丝提问， 就是shader不是很理解。 然后今天他就来了， 废话不多说，读完今天的这篇文章你可以学到以下几点：")]),t._v(" "),a("ol",[a("li",[t._v("为什么需要有shader ? shader的作用是什么？？？？")]),t._v(" "),a("li",[t._v("shader 中的每个参数到底是什么意思？？ 怎么去用？？？")])]),t._v(" "),a("p",[t._v("你如果会了，这篇文章你可以不用看👀，不用浪费时间，去看别的文章。 如果哪里写的有问题欢迎大家指正，我也在不断地学习当中。")]),t._v(" "),a("h1",{attrs:{id:"why-need-shader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-need-shader"}},[t._v("#")]),t._v(" why need shader")]),t._v(" "),a("p",[t._v("这里我结合自己的思考🤔，讲讲webgl的整个的一个渲染过程。")]),t._v(" "),a("h2",{attrs:{id:"渲染管线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染管线"}},[t._v("#")]),t._v(" 渲染管线")]),t._v(" "),a("p",[a("strong",[t._v("Webgl")]),t._v("的渲染依赖底层"),a("strong",[t._v("GPU")]),t._v("的渲染能力。所以"),a("strong",[t._v("WEBGL")]),t._v(" 渲染流程和 "),a("strong",[t._v("GPU")]),t._v(" 内部的渲染管线是相符的。")]),t._v(" "),a("p",[a("strong",[t._v("渲染管线的作用是将3D模型转换为2维图像。")])]),t._v(" "),a("p",[t._v("在早期，渲染管线是不可编程的，叫做"),a("strong",[t._v("固定渲染管线")]),t._v("，工作的细节流程已经固定，修改的话需要调整一些参数。")]),t._v(" "),a("p",[t._v("现代的 "),a("strong",[t._v("GPU")]),t._v(" 所包含的渲染管线为"),a("strong",[t._v("可编程渲染管线")]),t._v("，可以通过编程 "),a("strong",[t._v("GLSL 着色器语言")]),t._v(" 来控制一些渲染阶段的细节。")]),t._v(" "),a("p",[t._v("简单来说： 就是使用"),a("strong",[t._v("shader")]),t._v("，我们可以对画布中"),a("strong",[t._v("每个像素点做处理")]),t._v("，然后就可以生成各种酷炫的效果了。")]),t._v(" "),a("h1",{attrs:{id:"渲染过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染过程"}},[t._v("#")]),t._v(" 渲染过程")]),t._v(" "),a("p",[t._v("渲染过程大概经历了下面这么多过程， 因为本篇文章的重点其实是在着色器，所以我重点分析从"),a("strong",[t._v("顶点着色器")]),t._v("—— "),a("strong",[t._v("片元着色器")]),t._v("的一个过程")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("顶点着色器")])]),t._v(" "),a("li",[a("strong",[t._v("图片装配")])]),t._v(" "),a("li",[a("strong",[t._v("光栅化")])]),t._v(" "),a("li",[a("strong",[t._v("片元着色器")])]),t._v(" "),a("li",[a("strong",[t._v("逐片段操作（本文不会分享此内容）")])]),t._v(" "),a("li",[a("strong",[t._v("裁剪测试")])]),t._v(" "),a("li",[a("strong",[t._v("多重采样操作")])]),t._v(" "),a("li",[a("strong",[t._v("背面剔除")])]),t._v(" "),a("li",[a("strong",[t._v("模板测试")])]),t._v(" "),a("li",[a("strong",[t._v("深度测试")])]),t._v(" "),a("li",[a("strong",[t._v("融合")])]),t._v(" "),a("li",[a("strong",[t._v("缓存")])])]),t._v(" "),a("h2",{attrs:{id:"顶点着色器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顶点着色器"}},[t._v("#")]),t._v(" 顶点着色器")]),t._v(" "),a("p",[t._v("WebGL就是和GPU打交道，在GPU上运行的代码是一对着色器，一个是顶点着色器，另一个是片元着色器。每次调用着色程序都会先执行顶点着色器，再执行片元着色器。")]),t._v(" "),a("p",[t._v("一个顶点着色器的工作是生成裁剪空间坐标值，通常是以下的形式：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vertexShaderSource "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n    attribute vec3 position; \n    void main() {\n        gl_Position = vec4(position,1); \n    }\n")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n")])])]),a("p",[t._v("每个顶点调用一次（顶点）着色器，每次调用都需要设置一个特殊的全局变量 "),a("strong",[t._v("gl_Position")]),t._v("。 该变量的值就是裁减空间坐标值。  这里有同学就问了， 什么是"),a("strong",[t._v("裁剪空间的坐标值")]),t._v("？？？")]),t._v(" "),a("p",[t._v("其实我之前有讲过，我在讲一遍。")]),t._v(" "),a("p",[t._v("何为裁剪空间坐标？就是无论你的画布有多大，裁剪坐标的坐标范围永远是 -1 到 1 。")]),t._v(" "),a("p",[t._v("看下面这张图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20210905103618855.png",alt:"裁剪坐标系"}})]),t._v(" "),a("p",[t._v("如果运行一次顶点着色器， 那么gl_Position  就是**（-0.5，-0.5，0，1）** 记住他永远是个 "),a("strong",[t._v("Vec4")]),t._v(",  简单理解就是对应"),a("strong",[t._v("x、y、z、w")]),t._v("。即使你没用其他的，也要设置默认值， 这就是所谓的 3维模型转换到我们屏幕中。")]),t._v(" "),a("p",[t._v("顶点着色器需要的数据，可以通过以下四种方式获得。")]),t._v(" "),a("ol",[a("li",[t._v("attributes 属性（从缓冲读取数据）")]),t._v(" "),a("li",[t._v("uniforms 全局变量 （一般用来对物体做整体变化、 旋转、缩放）")]),t._v(" "),a("li",[t._v("textures 纹理（从像素或者纹理获得数据）")]),t._v(" "),a("li",[t._v("varyings 变量  （将顶点着色器的变量 传给 片元着色器）")])]),t._v(" "),a("h2",{attrs:{id:"attributes-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#attributes-属性"}},[t._v("#")]),t._v(" Attributes 属性")]),t._v(" "),a("p",[t._v("属性可以用 "),a("code",[t._v("float")]),t._v(", "),a("code",[t._v("vec2")]),t._v(", "),a("code",[t._v("vec3")]),t._v(", "),a("code",[t._v("vec4")]),t._v(", "),a("code",[t._v("mat2")]),t._v(", "),a("code",[t._v("mat3")]),t._v(" 和 "),a("code",[t._v("mat4")]),t._v(" 数据类型")]),t._v(" "),a("p",[t._v("所以它内建的数据类型例如"),a("code",[t._v("vec2")]),t._v(", "),a("code",[t._v("vec3")]),t._v("和 "),a("code",[t._v("vec4")]),t._v("分别代表两个值，三个值和四个值， 类似的还有"),a("code",[t._v("mat2")]),t._v(", "),a("code",[t._v("mat3")]),t._v(" 和 "),a("code",[t._v("mat4")]),t._v(" 分别代表 2x2, 3x3 和 4x4 矩阵。 你可以做一些运算例如常量和矢量的乘法。看几个例子吧：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vec4 a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvec4 b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b 现在是 vec4(2, 4, 6, 8);")]),t._v("\n")])])]),a("p",[t._v("向量乘法 和矩阵乘法 ：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("mat4 a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\nmat4 b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\nmat4 c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \nvec4 v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\nvec4 y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("它还支持矢量"),a("strong",[t._v("调制")]),t._v("，意味者你可以交换或重复分量。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("yyyy  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bgra  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("g"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rgb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("g"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("这样你在处理图片的时候可以轻松进"),a("strong",[t._v("行 颜色通道 对调")]),t._v("， 发现你可以实现各种各样的滤镜了。")]),t._v(" "),a("p",[t._v("后面的属性在下面实战中会讲解：我们接着往下走：")]),t._v(" "),a("h2",{attrs:{id:"图元装配和光栅化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图元装配和光栅化"}},[t._v("#")]),t._v(" 图元装配和光栅化")]),t._v(" "),a("p",[a("strong",[t._v("什么是图元？")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("描述各种图形元素的函数叫做图元，描述几何元素的称为几何图元（点，线段或多边形）。点和线是最简单的几何图元")]),t._v("\n经过顶点着色器计算之后的坐标会被组装成"),a("strong",[t._v("组合图元")]),t._v("。")])]),t._v(" "),a("p",[a("strong",[t._v("通俗解释")]),t._v("："),a("strong",[t._v("图元就是一个点、一条线段、或者是一个多边形。")])]),t._v(" "),a("p",[a("strong",[t._v("什么是图元装配呢？")])]),t._v(" "),a("p",[a("strong",[t._v("简单理解就是说将我们设置的顶点、颜色、纹理等内容组装称为一个可渲染的多边形的过程。")])]),t._v(" "),a("p",[t._v("组装的类型取决于： 你最后绘制选择的图形类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawArrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TRIANGLES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("如果是三角形的话，顶点着色器就执行三次")])]),t._v(" "),a("h2",{attrs:{id:"光栅化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#光栅化"}},[t._v("#")]),t._v(" 光栅化")]),t._v(" "),a("p",[a("strong",[t._v("什么是光栅化：")])]),t._v(" "),a("p",[t._v("通过图元装配生成的多边形，计算像素并填充，"),a("strong",[t._v("剔除")]),t._v("不可见的部分，"),a("strong",[t._v("剪裁")]),t._v("掉不在可视范围内的部分。最终生成可见的带有颜色数据的图形并绘制。")]),t._v(" "),a("p",[a("strong",[t._v("光栅化流程图解：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20210905112920271.png",alt:"光珊化图解"}})]),t._v(" "),a("h2",{attrs:{id:"剔除和剪裁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剔除和剪裁"}},[t._v("#")]),t._v(" 剔除和剪裁")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("剔除")]),t._v("：")]),t._v(" "),a("p",[t._v("在日常生活中，对于不透明物体，背面对于观察者来说是不可见的。同样，在"),a("strong",[t._v("webgl")]),t._v("中，我们也可以设定物体的背面不可见，那么在渲染过程中，就会将不可见的部分剔除，不参与绘制。节省渲染开销。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("剪裁")]),t._v("：")]),t._v(" "),a("p",[t._v("日常生活中不论是在看电视还是观察物体，都会有一个可视范围，在可视范围之外的事物我们是看不到的。类似的，图形生成后，有的部分可能位于可视范围之外，这一部分会被剪裁掉，不参与绘制。以此来提高性能。这个就是"),a("strong",[t._v("视椎体")]),t._v("， 在📷范围内能看到的东西，才进行绘制。")])])]),t._v(" "),a("h2",{attrs:{id:"片元着色器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#片元着色器"}},[t._v("#")]),t._v(" 片元着色器")]),t._v(" "),a("p",[a("strong",[t._v("光珊化后，每一个像素点都包含了 颜色 、深度 、纹理数据， 这个我们叫做片元")])]),t._v(" "),a("blockquote",[a("p",[t._v("小tips ： 每个像素的颜色由片元着色器的"),a("strong",[t._v("gl_FragColor")]),t._v("提供")])]),t._v(" "),a("p",[t._v("接收光栅化阶段生成的片元，在光栅化阶段中，已经计算出每个片元的颜色信息，这一阶段会将片元做逐片元挑选的操作，处理过的片元会继续向后面的阶段传递。 "),a("strong",[t._v("片元着色器运行的次数由图形有多少个片元决定的")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("逐片元挑选")])]),t._v(" "),a("p",[t._v("通过模板测试和深度测试来确定片元是否要显示，测试过程中会丢弃掉部分无用的片元内容，然后生成可绘制的二维图像绘制并显示。")]),t._v(" "),a("ul",[a("li",[t._v("**深度测试：**就是对 "),a("strong",[t._v("z")]),t._v(" 轴的值做测试，值比较小的片元内容会覆盖值比较大的。（类似于近处的物体会遮挡远处物体）。")]),t._v(" "),a("li",[t._v("**模板测试：**模拟观察者的观察行为，可以接为镜像观察。标记所有镜像中出现的片元，最后只绘制有标记的内容。")])]),t._v(" "),a("h1",{attrs:{id:"实战-绘制个三角形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实战-绘制个三角形"}},[t._v("#")]),t._v(" 实战——绘制个三角形")]),t._v(" "),a("p",[t._v("在进行实战之前，我们先给你看一张图，让你能大概了解，用原生webgl生成一个三角形需要那些步骤：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/draw.png",alt:"draw"}})]),t._v(" "),a("p",[t._v("我们就跟着这个流程图一步一步去操作：")]),t._v(" "),a("h2",{attrs:{id:"初始化canvas"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化canvas"}},[t._v("#")]),t._v(" 初始化canvas")]),t._v(" "),a("p",[t._v("新建一个webgl画布")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<canvas id="webgl" width="500" height="500"></canvas>\n')])])]),a("p",[t._v("创建webgl 上下文：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" gl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webgl'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webgl'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"创建着色器程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建着色器程序"}},[t._v("#")]),t._v(" 创建着色器程序")]),t._v(" "),a("p",[t._v("着色器的程序这些代码，其实是重复的，我们还是先看下图，看下我们到底需要哪些步骤：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/shader.png",alt:"shader"}})]),t._v(" "),a("p",[t._v("那我们就跟着这个流程图： 一步一步来好吧。")]),t._v(" "),a("h3",{attrs:{id:"创建着色器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建着色器"}},[t._v("#")]),t._v(" 创建着色器")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vertexShader "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createShader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VERTEX_SHADER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fragmentShader "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createShader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FRAGMENT_SHADER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("gl.VERTEX_SHADER  和 gl.FRAGMENT_SHADER  这两个是全局变量 分别表示"),a("strong",[t._v("顶点着色器")]),t._v(" 和"),a("strong",[t._v("片元着色器")])]),t._v(" "),a("h3",{attrs:{id:"绑定数据源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绑定数据源"}},[t._v("#")]),t._v(" 绑定数据源")]),t._v(" "),a("p",[t._v("顾名思义： 数据源，也就是我们的着色器 代码。")]),t._v(" "),a("p",[t._v("编写着色器代码有很多种方式：")]),t._v(" "),a("ol",[a("li",[t._v("用 script 标签  type  notjs 这样去写")]),t._v(" "),a("li",[t._v("模板字符串 （比较喜欢推荐这种）")])]),t._v(" "),a("p",[t._v("我们先写顶点着色器:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vertexShaderSource "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n    attribute vec4 a_position;\n    void main() {\n        gl_Position = a_position;\n    }\n ")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n")])])]),a("p",[t._v("顶点着色器 必须要有 main 函数 ，他是强类型语言， "),a("strong",[t._v("记得加分号哇")]),t._v(" 不是js 兄弟们。  我这段着色器代码非常简单   定义一个vec4 的顶点位置， 然后传给 gl_Position")]),t._v(" "),a("p",[t._v("这里有小伙伴会问 ？ 这里"),a("strong",[t._v("a_position")]),t._v("一定要这么搞？？")]),t._v(" "),a("p",[t._v("这里其实是这样的哇， 就是我们一般进行变量命名的时候  都会的前缀 用来区分 他是属性 还是 全局变量 还是纹理   比如这样：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("uniform mat4 u_mat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("表示个矩阵，如果不这样也可以哈。 但是要专业呗，防止bug 影响。")]),t._v(" "),a("p",[t._v("我们接着写片元着色器：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fragmentShaderSource "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n    void main() {\n        gl_FragColor = vec4(1.0,0.0,0.0,1.0);\n    }\n")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n")])])]),a("p",[t._v("这个其实理解起来非常简单哈， 每个像素点的颜色 是红色 ， gl_FragColor 其实对应的是 "),a("strong",[t._v("rgba")]),t._v("  也就是颜色的表示。")]),t._v(" "),a("p",[t._v("有了数据源之后开始绑定：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建着色器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vertexShader "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createShader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VERTEX_SHADER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fragmentShader "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createShader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FRAGMENT_SHADER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//绑定数据源")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shaderSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vertexShader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vertexShaderSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shaderSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fragmentShader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fragmentShaderSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("是不是很简答哈哈哈哈，我觉得你应该会了。")]),t._v(" "),a("h3",{attrs:{id:"后面着色器的一些操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后面着色器的一些操作"}},[t._v("#")]),t._v(" 后面着色器的一些操作")]),t._v(" "),a("p",[t._v("其实后面"),a("strong",[t._v("编译着色器")]),t._v("、"),a("strong",[t._v("绑定着色器")]),t._v("、"),a("strong",[t._v("连接着色器程序")]),t._v("、"),a("strong",[t._v("使用着色器程序")]),t._v("  都是一个api 搞定的事不多说了 直接看代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译着色器")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compileShader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vertexShader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compileShader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fragmentShader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建着色器程序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" program "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createProgram")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attachShader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vertexShader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attachShader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fragmentShader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 链接 并使用着色器")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("linkProgram")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useProgram")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("这样我们就创建好了一个着色器程序了。")]),t._v(" "),a("p",[t._v("这里又有人问，我怎么知道我创建的着色器是对的还是错的呢？ 我就是很粗心的人呢？？？ 好的他来了 如何调试：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" success "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProgramParameter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LINK_STATUS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useProgram")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" program\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProgramInfoLog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test---'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteProgram")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("getProgramParameter")]),t._v("  这个方法用来判断 我们着色器 "),a("strong",[t._v("glsl")]),t._v(" 语言写的是不是对的， 然后你可以通过 "),a("strong",[t._v("getProgramInfoLog")]),t._v("这个方法 类似于打 日志 去发现❌了。")]),t._v(" "),a("h2",{attrs:{id:"数据存入缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据存入缓冲区"}},[t._v("#")]),t._v(" 数据存入缓冲区")]),t._v(" "),a("p",[t._v("有了着色器，现在我们差的就是数据了对吧。")]),t._v(" "),a("p",[t._v("上文在写顶点着色器的时候用到了Attributes属性，说明是"),a("strong",[t._v("这个变量要从缓冲中读取数据")]),t._v("，下面我们就来把数据存入缓冲中。")]),t._v(" "),a("p",[t._v("首先创建一个顶点缓冲区对象（Vertex Buffer Object, VBO）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("gl.createBuffer()函数创建缓冲区并返回一个标识符,接下来需要为WebGL绑定这个buffer")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bindBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ARRAY_BUFFER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("gl.bindBuffer()函数把标识符buffer设置为"),a("strong",[t._v("当前缓冲区")]),t._v("，后面的所有的数据都会都会被放入当前缓冲区，"),a("strong",[t._v("直到bindBuffer绑定另一个当前缓冲区")]),t._v("。")]),t._v(" "),a("p",[t._v("我们新建一个数组 然后并把数据存入到缓冲区中。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Float32Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bufferData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ARRAY_BUFFER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STATIC_DRAW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("因为"),a("strong",[t._v("JavaScript与WebGL通信必须是二进制的")]),t._v("，不能是传统的文本格式，所以这里使用了ArrayBuffer对象将数据转化为二进制，因为顶点数据是浮点数,精度不需要太高，所以使用Float32Array就可以了，这是JavaScript与GPU之间大量实时交换数据的有效方法。")]),t._v(" "),a("p",[a("strong",[t._v("gl.STATIC_DRAW")]),t._v("  指定数据存储区的使用方法： 缓存区的内容可能会经常使用，但是不会更改")]),t._v(" "),a("p",[a("strong",[t._v("gl.DYNAMIC_DRAW")]),t._v(" 表示 缓存区的内容经常使用，也会经常更改。")]),t._v(" "),a("p",[a("strong",[t._v("gl.STREAM_DRAW")]),t._v(" 表示缓冲区的内容可能不会经常使用")]),t._v(" "),a("h2",{attrs:{id:"从缓冲中读取数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从缓冲中读取数据"}},[t._v("#")]),t._v(" 从缓冲中读取数据")]),t._v(" "),a("p",[a("strong",[t._v("GLSL")]),t._v("着色程序的唯一输入是一个属性值"),a("strong",[t._v("a_position")]),t._v("。 我们要做的第一件事就是从刚才创建的GLSL着色程序中找到这个属性值所在的位置。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" aposlocation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttribLocation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a_position'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("接下来我们需要告诉"),a("strong",[t._v("WebGL")]),t._v("怎么从我们之前准备的缓冲中获取数据给着色器中的属性。 首先我们需要启用对应属性")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableVertexAttribArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aposlocation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("最后是从缓冲中读取数据绑定给被激活的"),a("strong",[t._v("aposlocation")]),t._v("的位置")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vertexAttribPointer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aposlocation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FLOAT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("gl.vertexAttribPointer()函数有六个参数：")]),t._v(" "),a("ol",[a("li",[t._v("读取的数据要绑定到哪")]),t._v(" "),a("li",[t._v("表示每次从缓存取几个数据，也可以表示每个顶点有几个单位的数据，取值范围是1-4。这里每次取2个数据，之前vertices声明的6个数据，正好是3个顶点的二维坐标。")]),t._v(" "),a("li",[t._v("表示数据类型，可选参数有gl.BYTE有符号的8位整数，gl.SHORT有符号的16位整数，gl.UNSIGNED_BYTE无符号的8位整数，gl.UNSIGNED_SHORT无符号的16位整数，gl.FLOAT32位IEEE标准的浮点数。")]),t._v(" "),a("li",[t._v("表示是否应该将整数数值归一化到特定的范围，对于类型gl.FLOAT此参数无效。")]),t._v(" "),a("li",[t._v("表示每次取数据与上次隔了多少位，0表示每次取数据连续紧挨上次数据的位置，WebGL会自己计算之间的间隔。")]),t._v(" "),a("li",[t._v("表示首次取数据时的偏移量，必须是字节大小的倍数。0表示从头开始取。")])]),t._v(" "),a("h2",{attrs:{id:"渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染"}},[t._v("#")]),t._v(" 渲染")]),t._v(" "),a("p",[t._v("现在着色器程序 和数据都已经ready 了， 现在就差渲染了。 渲染之前和2d canvas 一样做一个清除画布的动作：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清除canvas")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearColor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COLOR_BUFFER_BIT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("我们用"),a("strong",[t._v("0、0、0、0")]),t._v("清空画布，分别对应 "),a("strong",[t._v("r, g, b, alpha （红，绿，蓝，阿尔法")]),t._v("）值， 所以在这个例子中我们让画布变透明了。")]),t._v(" "),a("p",[t._v("开启绘制三角形：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("gl.drawArrays(gl.TRIANGLES, 0, 3)\n")])])]),a("ol",[a("li",[a("strong",[t._v("第一个参数表示绘制的类型")])]),t._v(" "),a("li",[a("strong",[t._v("第二个参数表示从第几个顶点开始绘制")])]),t._v(" "),a("li",[a("strong",[t._v("第三个参数表示绘制多少个点，缓冲中一共6个数据，每次取2个，共3个点")])])]),t._v(" "),a("p",[a("strong",[t._v("绘制类型共有下列几种")]),t._v(" "),a("strong",[t._v("看图：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/drawtype.png",alt:"drawtype"}})]),t._v(" "),a("p",[t._v("这里我们看下画面是不是一个红色的三角形 ：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/%E4%B8%89%E8%A7%92%E5%BD%A2%E6%88%AA%E5%9B%BE.png",alt:"三角形截图"}})]),t._v(" "),a("p",[t._v("我们创建的数据是这样的：")]),t._v(" "),a("p",[a("strong",[t._v("画布的宽度是 500 * 500 转换出来的实际数据其实是这样的")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("175")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("325")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("325")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("325")]),t._v("\n")])])]),a("h2",{attrs:{id:"矩阵的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#矩阵的使用"}},[t._v("#")]),t._v(" 矩阵的使用")]),t._v(" "),a("p",[t._v("有了静态的图形我们开始着色器，对三角形做一个缩放。")]),t._v(" "),a("p",[t._v("改写顶点着色器： 其实在顶点着色器上加一个全局变量  这就用到了 着色器的第二个属性  uniform")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vertexShaderSource "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n  attribute vec4 a_position;\n  // 添加矩阵代码\n  uniform mat4 u_mat;\n  void main() {\n      gl_Position = u_mat * a_position;\n  }\n")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n")])])]),a("p",[t._v("然后和属性一样，我们需要找到 uniform 对应的位置：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" matlocation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUniformLocation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("program"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'u_mat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("然后初始化一个旋转举证：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化一个旋转矩阵。")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Float32Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    Tx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  Ty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  Tz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Tx, Ty, Tz 对应的其实就是 x y z 轴缩放的比例。")]),t._v(" "),a("p",[t._v("最后一步， 将矩阵应用到着色器上， 在画之前， 这样每个点 就可以✖️ 这个缩放矩阵了 ，所以整体图形 也就进行了缩放。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("gl.uniformMatrix4fv(matlocation, false, mat)\n")])])]),a("p",[t._v("三个参数分别代表什么意思：")]),t._v(" "),a("ol",[a("li",[t._v("全局变量的位置")]),t._v(" "),a("li",[t._v("是否为转置矩阵")]),t._v(" "),a("li",[t._v("矩阵数据")])]),t._v(" "),a("p",[t._v("OK 我写了三角形缩放的动画：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" Tx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//x坐标的位置")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" Ty "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//y坐标的位置")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" Tz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//z坐标的位置")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" Tw "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//差值")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" isOver "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" step "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.08")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      isOver "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      isOver "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isOver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      Tx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" step\n      Ty "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" step\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      Tx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" step\n      Ty "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" step\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Float32Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      Tx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  Ty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  Tz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniformMatrix4fv")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matlocation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawArrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TRIANGLES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用此方法实现一个动画")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestAnimationFrame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("效果图如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/%E7%BC%A9%E6%94%BE%E5%8A%A8%E7%94%BB.gif",alt:"缩放动画"}})]),t._v(" "),a("p",[t._v("最后 给大家看一下webgl 内部是怎么搞的 一张gif 动画 ：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/vertex-shader-anim.gif",alt:"vertex-shader-anim"}})]),t._v(" "),a("p",[t._v("原始的数据通过 顶点着色器  生成一系列 新的点。")]),t._v(" "),a("h2",{attrs:{id:"变量的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量的使用"}},[t._v("#")]),t._v(" 变量的使用")]),t._v(" "),a("p",[t._v("说完矩阵了下面👇，我们开始说下着色器中的varying 这个变量 是如何和片元着色器进行联动的。")]),t._v(" "),a("p",[t._v("我们还是继续改造顶点着色器：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vertexShaderSource "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n  attribute vec4 a_position;\n  uniform mat4 u_mat;\n  // 变量\n  varying vec4 v_color;\n  void main() {\n      gl_Position = u_mat * a_position;\n      v_color =  gl_Position * 0.5 + 0.5;\n  }\n")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n")])])]),a("p",[t._v("这里有一个小知识 ， gl_Position  他的值范围是  "),a("strong",[t._v("-1 -1")]),t._v(" 但是片元着色 他是颜色 他的范围是 "),a("strong",[t._v("0 - 1")]),t._v(" ， 所以呢这时候呢，我们就要 做一个范围转换  所以为什么要 乘 0.5  在加上 0.5 了， 希望你们明白。")]),t._v(" "),a("p",[t._v("改造下片元着色器：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fragmentShaderSource "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n    precision lowp float;\n    varying vec4 v_color;\n    void main() {\n        gl_FragColor = v_color;\n    }\n")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n")])])]),a("p",[t._v("只要没一个像素点 改为由顶点着色器传过来的就好了。")]),t._v(" "),a("p",[t._v("我们看下这时候的三角形 变成啥样子了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/%E5%BD%A9%E8%89%B2%E4%B8%89%E8%A7%92%E5%BD%A2.gif",alt:"彩色三角形"}})]),t._v(" "),a("p",[t._v("是不是变成彩色三角形了， 这里很多人就会问， 这到底是怎么形成呢， 本质是在三角形的三个顶点， 做线性插值的过程：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/%E6%8F%92%E5%80%BC%E8%BF%87%E7%A8%8B.gif",alt:"插值过程"}})]),t._v(" "),a("h1",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("本篇文章大概是对webgl 做了一个基本的介绍， 和带你用几个简单的小例子 带你入门了glsl 语言， 你以为webgl 就这样嘛  那你就错了，其实有一个texture 我是没有讲的， 后面我去专门写一篇文章去将纹理贴图 ， 漫反射贴图、 法线贴图。 希望你关注下我，不然找不到我了， 如果你觉得本篇文章对你有帮助的话，欢迎 点赞 、评论、收藏。 我们下期再见👋， 我是喜欢"),a("strong",[t._v("图形的Fly")]),t._v("。")]),t._v(" "),a("p",[t._v("最后欢迎关注"),a("strong",[t._v("前端图形")]),t._v("：")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://ztifly.oss-cn-hangzhou.aliyuncs.com/image-20210905173945402.png",alt:"公众号"}})])}),[],!1,null,null,null);s.default=r.exports}}]);